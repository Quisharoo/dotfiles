{
  "tabnine.experimentalAutoImports": true,
  "editor.inlineSuggest.enabled": true,
  "chatgpt.openOnStartup": true,
  "security.workspace.trust.untrustedFiles": "open",
  "terminal.integrated.sendKeybindingsToShell": true,
  "git.confirmSync": false,
  "git.autofetch": true,
  "github.copilot.nextEditSuggestions.enabled": true,
  "chat.tools.terminal.autoApprove": {
    "source ~/.zshrc": true,
    "npm install express": true,
    "npm run dev": true,
    "npm install": true,
    "npm test": true,
    "const": true,
    "for": true,
    "i": true,
    "lines.length": true,
    "i++)": true,
    "if": true,
    "'))": true,
    "lines.splice(i,": true,
    "')": true,
    "break": true,
    "}": true,
    "\"": true,
    "npm run check": true,
    "npm run build": true,
    "git add": true,
    "git worktree": true,
    "git commit": true,
    "sed": true,
    "/dev/null": true,
    "node -e \"console.log(require.resolve('css-tree/cjs/data-patch.cjs'))\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "git reset": true,
    "git checkout": true,
    "true": true,
    "git commit -m 'chore(git): ignore .worktrees directory' --no-verify": {
      "approve": true,
      "matchCommandLine": true
    },
    "git switch": true,
    "git cherry-pick": true,
    "lsof": true,
    "xargs": true,
    "console.log(pkg.name,": true,
    "'no-type',": true,
    "'no-module',": true,
    "PORT=3000": true,
    "cd /Users/colm/Desktop/code && git -C TransactionCalendar worktree remove --force TransactionCalendar-branchA": {
      "approve": true,
      "matchCommandLine": true
    },
    "test": true,
    "cd /Users/colm/Desktop/code/TransactionCalendar/.worktrees/branchB && test -d node_modules && echo \"⚠️  node_modules EXISTS (should be ignored)\" || echo \"✅ node_modules missing (correctly ignored)\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "cd /Users/colm/Desktop/code/TransactionCalendar/.worktrees/branchC && test -d node_modules && echo \"⚠️  node_modules EXISTS (should be ignored)\" || echo \"✅ node_modules missing (correctly ignored)\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "@types/node)\"'": true,
    "rm": true,
    "npm ci": true,
    "node -p \"require.resolve('vite')\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "node -p \"process.cwd()\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "cd \"/Users/colm/iCloud Drive (Archive)/Desktop/code/TransactionCalendar\" && git status": {
      "approve": true,
      "matchCommandLine": true
    },
    "diff": true,
    ".gitignore": true,
    ".specify/scripts/bash/create-new-feature.sh --json --short-name \"promote-recurring-export\" \"I want to take the additional calendar export feature for recurring transactions that appears after you load the data (either csv or demo), and implement this at the beginning of the web page as I believe this provides the most immediate value of the app - extracting recurring transactions from csv and downloading as an ics file\"": {
      "approve": true,
      "matchCommandLine": true
    },
    "mkdir": true,
    "git rev-parse": true,
    "npm run database:setup": true,
    "docker compose": true,
    "egrep": true,
    "PG_'": true,
    "NODE=$(which": true,
    "NODE:-not": true,
    "then": true,
    "do": true,
    "nslookup": true,
    "dig": true,
    "npm_config": true,
    "HTTP_PROXY": true,
    "HTTPS_PROXY'": true,
    "curl -I --max-time 10 https://registry.npmjs.org/ || true": {
      "approve": true,
      "matchCommandLine": true
    },
    "openssl": true,
    "nc": true,
    "npm config": true,
    "pnpm": true,
    "env": true,
    "HTTPS_PROXY": true,
    "NO_PROXY'": true,
    "corepack": true,
    "./scripts/pnpm-install-retry.sh": true,
    "npm run test:install": true,
    "/usr/bin/env": true,
    "zprof'": true,
    "go": true,
    "gofmt": true,
    "'EOF'": true,
    "internal/colorize.go": true,
    "\\\\.)*)\"`)": true,
    "len(payload)": true,
    "return": true,
    "styled": true,
    "var": true,
    "len(text)": true,
    "ch": true,
    "escape": true,
    "inString": true,
    "j": true,
    "j++": true,
    "c": true,
    "case": true,
    "b.WriteString(transform(current.String()))": true,
    "b.WriteString(current.String())": true,
    "sub": true,
    "len(value)": true,
    "needsColour": true,
    "b.WriteByte('`')": true,
    "b.WriteString(ansiYellow)": true,
    "b.WriteString(ansiReset)": true
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "stripe.enableIntegrationGuides": true,
  "github.copilot.chat.alternateGptPrompt.enabled": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.responsesApiReasoningEffort": "medium",
  "chat.agent.maxRequests": 50,
  "diffEditor.experimental.showMoves": true,
  "diffEditor.renderSideBySide": false,
  "terminal.integrated.fontFamily": "FiraCode Nerd Font Mono",
  "terminal.integrated.fontSize": 13
}